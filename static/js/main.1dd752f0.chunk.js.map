{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","details","handleDetailsButtonClicked","setState","prevState","event","this","props","className","summary","start","dateTime","timeZone","location","onClick","href","htmlLink","description","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","updateEvents","console","log","handleItemClicked","suggestion","type","placeholder","onChange","e","onFocus","style","display","NumberOfEvents","message","isNaN","includes","updateNumberOfEvents","mockData","kind","etag","status","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","getToken","fetch","then","res","json","catch","result","encodeCode","encodeURIComponent","access_token","setItem","getEvents","NProgress","startsWith","done","token","removeQuery","url","JSON","stringify","history","pushState","pathname","newurl","protocol","host","App","eventCount","currentLocation","count","eventsToShow","slice","newCount","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1dd752f0.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Event extends Component{\n  state = {\n    details: false\n  }\n\n  handleDetailsButtonClicked = () => {\n    this.setState((prevState) => ({ details: !prevState.details }));\n  };\n\n  render(){\n    const {event} = this.props;\n    return (\n      <>\n        <div className = \"collapsed\">\n          <div className = \"title\">\n            <h1 className = \"summary\">{event.summary}</h1>\n          </div>\n          <div className = \"line1\">\n            <span className = \"startTime\">{event.start.dateTime}</span>\n            <span className = \"startTimeZone\">{event.start.timeZone}</span>\n          </div>\n          <div className = \"line2\">\n            <span>@</span>\n            <span className = \"summary\">{event.summary}</span>\n            <span> | </span>\n            <span className = \"location\">{event.location}</span>\n          </div>\n          {this.state.details === false &&\n            <button className = \"showDetails\" onClick = {() => this.handleDetailsButtonClicked()}>show details</button>\n          } \n        </div>\n        {this.state.details === true && \n          <div className = \"expanded\">\n            <h2 className = \"aboutEvent\">About event: </h2>\n            <a className = \"googleCalendar\" href = {event.htmlLink}>See details on Google Calendar</a>\n            <p className = \"description\">{event.description}</p>\n            <button className = \"hideDetails\" onClick = {() => this.handleDetailsButtonClicked()}>hide details</button>\n          </div>\n        }\n      </>\n    );\n  }\n}\n\nexport default Event;","import React, {Component} from 'react';\nimport Event from './Event'\n\nclass EventList extends Component{\n  render(){\n    const {events} = this.props;\n    return (\n      <ul className = \"EventList\">\n        {events.map(event => {\n          return (\n            <li className = \"event\" key = {event.id}>\n              <Event event = {event}/>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, {Component} from 'react';\n\nclass CitySearch extends Component{\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({query: value, suggestions});\n    this.props.updateEvents(value, -1);\n    console.log('end of city input change');\n  }\n\n  handleItemClicked = (suggestion) => {\n    this.setState({query: suggestion, showSuggestions: false});\n    this.props.updateEvents(suggestion, -1);\n    console.log('end of city item click');\n  }\n \n  render(){\n    return (\n      <div className = \"CitySearch\">\n        <input type = \"text\" className = \"city\" placeholder = \"Search for a city\" value = {this.state.query} onChange = {e => this.handleInputChanged(e)} onFocus = {() => {this.setState({showSuggestions: true})}}/>\n        <ul className = \"suggestions\" style = {this.state.showSuggestions ? {} : {display: 'none'}}>\n          {this.state.suggestions.map((suggestion) => {\n            return (\n              <li key = {suggestion} onClick = {() => {this.handleItemClicked(suggestion)}}>{suggestion}</li>\n            );\n          })}\n          <li key = \"all\" onClick = {() => {this.handleItemClicked('all')}}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, {Component} from 'react';\n\nclass NumberOfEvents extends Component{\n  state = {\n    query: 10,\n    message: ''\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    if(isNaN(value) || value < 0 || value === '0' || (value + '').includes('.')){\n      this.setState({message: 'Please enter a valid number'});\n    }else{\n      this.setState({query: value});\n      this.props.updateNumberOfEvents(value);\n      console.log('number input changed');\n    }\n  }\n\n  render(){\n    return (\n      <div className = \"NumberOfEvents\" >\n        <label className = \"numberOfEventsLabel\">Number of events: </label>\n        <span >\n          <input type = \"text\" className = \"numberOfEvents\" value = {this.state.query} onChange = {e => this.handleInputChanged(e)}/>\n        </span> \n        <span>\n          <p className = \"errorMessage\">{this.state.message}</p>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {kind:\"calendar#event\",etag:\"\\\"3181161784712000\\\"\",id:\"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",status:\"confirmed\",htmlLink:\"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",created:\"2020-05-19T19:17:46.000Z\",updated:\"2020-05-27T12:01:32.356Z\",summary:\"Learn JavaScript\",description:\"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",location:\"London, UK\",creator:{email:\"fullstackwebdev@careerfoundry.com\",self:true},organizer:{email:\"fullstackwebdev@careerfoundry.com\",self:true},start:{dateTime:\"2020-05-19T16:00:00+02:00\",timeZone:\"Europe/Berlin\"},end:{dateTime:\"2020-05-19T17:00:00+02:00\",timeZone:\"Europe/Berlin\"},recurringEventId:\"4eahs9ghkhrvkld72hogu9ph3e\",originalStartTime:{dateTime:\"2020-05-19T16:00:00+02:00\",timeZone:\"Europe/Berlin\"},iCalUID:\"4eahs9ghkhrvkld72hogu9ph3e@google.com\",sequence:0,reminders:{useDefault:true},eventType:\"default\"},\n  {kind:\"calendar#event\",etag:\"\\\"3181159875584000\\\"\",id:\"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",status:\"confirmed\",htmlLink:\"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",created:\"2020-05-19T19:14:30.000Z\",updated:\"2020-05-27T11:45:37.792Z\",summary:\"React is Fun\",description:\"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",location:\"Berlin, Germany\",creator:{email:\"fullstackwebdev@careerfoundry.com\",self:true},organizer:{email:\"fullstackwebdev@careerfoundry.com\",self:true},start:{dateTime:\"2020-05-20T14:00:00+02:00\",timeZone:\"Europe/Berlin\"},end:{dateTime:\"2020-05-20T15:00:00+02:00\",timeZone:\"Europe/Berlin\"},recurringEventId:\"3qtd6uscq4tsi6gc7nmmtpqlct\",originalStartTime:{dateTime:\"2020-05-20T14:00:00+02:00\",timeZone:\"Europe/Berlin\"},iCalUID:\"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",sequence:0,reminders:{useDefault:true},eventType:\"default\"}\n]\n\nexport {mockData};","import axios from 'axios';\nimport NProgress from 'nprogress';\nimport {mockData} from './mock-data'\n\n// This function takes an events array, then uses map to create a new array with only locations. It will also remove all duplicates by creating another new array using the spread operator and spreading a Set. The Set will remove all duplicates from the array.\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const getAccessToken = async() => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken)); //access token check\n\n  if(!accessToken || tokenCheck.error){ //no access token found\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\"); //authorization code\n    if(!code){ //no authorization code found\n      const results = await axios.get( //redirect to Google authorization screen to get the autorization code\n        \"https://qeobgl0ka7.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const {authUrl} = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code); //get access token from authorization code\n  }\n  return accessToken;\n}\n\nconst checkToken = async(accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  ).then((res) => res.json()).catch((error) => error.json());\n  return result;\n};\n\nconst getToken = async(code) => { //from authorization code\n  const encodeCode = encodeURIComponent(code);\n  const {access_token} = await fetch(\n    'https://qeobgl0ka7.execute-api.us-east-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n  ).then((res) => {\n    return res.json();\n  }).catch((error) => error);\n  access_token && localStorage.setItem(\"access_token\", access_token);\n  return access_token;\n};\n\nexport const getEvents = async() => {\n  NProgress.start();\n  if(window.location.href.startsWith('http://localhost')){\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n  if(token){\n    removeQuery();\n    const url = 'https://qeobgl0ka7.execute-api.us-east-2.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if(result.data){\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  if(window.history.pushState && window.location.pathname){ //add an entry to the browser's session history stack\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl); //history.pushState(state, title, [url])\n  }else{\n    newurl = window.location.protocol + \n    \"//\" + \n    window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};","import React, {Component} from 'react';\nimport './App.css';\nimport './nprogress.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport {extractLocations, getEvents} from './api';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    eventCount: 10,\n    currentLocation: 'all'\n  }\n\n  updateEvents = (location, count) => {\n    getEvents().then((events) => {\n      let eventsToShow = (location === 'all') ?\n        events :\n        events.filter((event) => \n          event.location === location\n        );\n      const {eventCount} = this.state;\n      if(count === -1){\n        count = eventCount;\n      }\n      eventsToShow = eventsToShow.slice(0, count);\n      this.setState({\n        events: eventsToShow,\n        eventCount: count,\n        currentLocation: location\n      });\n      console.log('location and number of events updated ' + location + ' | ' + count);\n    }); \n  };\n\n  updateNumberOfEvents = newCount => {\n    const {currentLocation} = this.state;\n    this.updateEvents(currentLocation, newCount);\n    console.log('number of events updated');\n  }\n\n  componentDidMount(){\n    const {eventCount} = this.state;\n    this.mounted = true;\n    getEvents().then((events) => {\n      if(this.mounted){\n        this.setState({events: events.slice(0, eventCount), locations: extractLocations(events)});\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  render(){\n    return (\n      <div className = \"App\">\n        <CitySearch locations = {this.state.locations} updateEvents = {(location, count) => this.updateEvents(location, count)}/>\n        <NumberOfEvents updateNumberOfEvents = {(newCount) => this.updateNumberOfEvents(newCount)}/>\n        <EventList events = {this.state.events}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\natatus.config('b5029f6fbf75490e83605fd72193128c').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}